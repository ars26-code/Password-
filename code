import tkinter as tk  
from tkinter import messagebox  
import random  
import string  

class PasswordGeneratorApp:  
    def __init__(self, root):  
        self.root = root  
        self.root.title("Password Generator")  
        self.root.geometry("400x350")  
        self.root.config(bg="#e0f7fa")  

        # Title  
        tk.Label(self.root, text="Password Generator", font=("Helvetica", 18, "bold"), bg="#e0f7fa", fg="#00796b").pack(pady=10)  

        # Length Input  
        tk.Label(self.root, text="Enter Password Length:", bg="#e0f7fa", fg="#004d40").pack(pady=5)  
        self.length_var = tk.IntVar(value=12)  
        tk.Entry(self.root, textvariable=self.length_var, width=10).pack(pady=5)  

        # Include Options  
        self.include_upper = tk.BooleanVar(value=True)  
        self.include_lower = tk.BooleanVar(value=True)  
        self.include_digits = tk.BooleanVar(value=True)  
        self.include_symbols = tk.BooleanVar(value=True)  

        tk.Checkbutton(self.root, text="Include Uppercase Letters", variable=self.include_upper, bg="#e0f7fa").pack(anchor=tk.W)  
        tk.Checkbutton(self.root, text="Include Lowercase Letters", variable=self.include_lower, bg="#e0f7fa").pack(anchor=tk.W)  
        tk.Checkbutton(self.root, text="Include Digits", variable=self.include_digits, bg="#e0f7fa").pack(anchor=tk.W)  
        tk.Checkbutton(self.root, text="Include Symbols", variable=self.include_symbols, bg="#e0f7fa").pack(anchor=tk.W)  

        # Generate Button  
        tk.Button(self.root, text="Generate Password", command=self.generate_password, bg="#00796b", fg="white").pack(pady=20)  

        # Copy to Clipboard Button  
        tk.Button(self.root, text="Copy to Clipboard", command=self.copy_to_clipboard, bg="#4caf50", fg="white").pack(pady=5)  

        # Result Label  
        self.result_label = tk.Label(self.root, text="", font=("Helvetica", 12), bg="#e0f7fa", fg="#004d40")  
        self.result_label.pack(pady=10)  

    def generate_password(self):  
        length = self.length_var.get()  

        if length < 1:  
            messagebox.showwarning("Input Error", "Password length must be at least 1.")  
            return  

        characters = ""  
        if self.include_upper.get():  
            characters += string.ascii_uppercase  
        if self.include_lower.get():  
            characters += string.ascii_lowercase  
        if self.include_digits.get():  
            characters += string.digits  
        if self.include_symbols.get():  
            characters += string.punctuation  

        if not characters:  
            messagebox.showwarning("Input Error", "Please select at least one character type.")  
            return  

        password = ''.join(random.choice(characters) for _ in range(length))  
        self.result_label.config(text=f"Generated Password: {password}")  

    def copy_to_clipboard(self):  
        password = self.result_label.cget("text").replace("Generated Password: ", "")  
        if password:  
            self.root.clipboard_clear()  # Clear the clipboard  
            self.root.clipboard_append(password)  # Add the password to the clipboard  
            messagebox.showinfo("Success", "Password copied to clipboard!")  

# Main execution  
if __name__ == "__main__":  
    root = tk.Tk()  
    app = PasswordGeneratorApp(root)  
    root.mainloop()
